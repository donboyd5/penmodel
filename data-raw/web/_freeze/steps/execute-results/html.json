{
  "hash": "ca30ba0cf81e355ebe4e0cd67ae65447",
  "result": {
    "engine": "knitr",
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n# Steps involved in streamlining the pension model for Florida FRS\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# source(here::here(\"report\", \"_common.R\"))\n\ndraw <- here::here(\"data-raw\")\n\n#. directories -- Florida FRS data - from the FRS2 project, but saved in the pendata project ----\ndfrs <- fs::path(r\"(E:/R_projects/packages/pendata/data-raw/frs)\")\ndrds <- fs::path(dfrs, \"rds\")\ndfreason <- fs::path(dfrs, \"from_reason\") # dfreason = directory -- from reason\n\n#. libraries ----\n# source(here::here(\"data-raw\", \"libraries.r\"))\nsource(fs::path(draw, \"libraries.r\"))\n\n# . constants ----\nfrs_constants <- readRDS(fs::path(drds, \"frs_constants.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nget_object <- function(x, envir = rws){\n  # get an object from the rws environment\n  # x is character string\n  # it is NOT saved in the global environment - assign if desired\n  get(x, envir = rws)\n}\n\n# get_object(\"year_range_\")\n```\n:::\n\n\n\n\n## Load Reason FRS workspace\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load Reason FRS workspace into its OWN environment I call rws ------------------------------\n\n\n\n#   workspace was saved on 4/24/2024:\n#      in my variant of Reason FRS project -- E:/R_projects/projects/Florida-FRS-main_v2/boyd_save_to_pendata.R\n#      to dfreason folder in pendata: save.image(fs::path(dfreason, \"reason_workspace.RData\"))\n\n# load takes some time\nwspath <- path(dfreason, \"reason_workspace.RData\")\nload(wspath, rws <- new.env())\nobjnames <- ls(name=rws) # names of objects in the workspace\nobjnames # almost 300 objects!; already sorted by name\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"add_new_entrants\"                                 \n  [2] \"admin_ben_payment_current_\"                       \n  [3] \"admin_early_retire_rate_tier_1_table\"             \n  [4] \"admin_early_retire_rate_tier_2_table\"             \n  [5] \"admin_entrant_profile_table\"                      \n  [6] \"admin_er_dc_cont_rate_\"                           \n  [7] \"admin_expense_\"                                   \n  [8] \"admin_headcount_table_\"                           \n  [9] \"admin_mort_retire_table\"                          \n [10] \"admin_mort_table\"                                 \n [11] \"admin_nc_cal_\"                                    \n [12] \"admin_normal_retire_rate_tier_1_table\"            \n [13] \"admin_normal_retire_rate_tier_2_table\"            \n [14] \"admin_outflow_\"                                   \n [15] \"admin_pvfb_term_current_\"                         \n [16] \"admin_retiree_pop_current_\"                       \n [17] \"admin_salary_headcount_table\"                     \n [18] \"admin_salary_table_\"                              \n [19] \"admin_separation_rate_table\"                      \n [20] \"admin_term_rate_female_table_\"                    \n [21] \"admin_term_rate_male_table_\"                      \n [22] \"admin_total_active_member_\"                       \n [23] \"admin_val_norm_cost_\"                             \n [24] \"admin_wf_data\"                                    \n [25] \"age_range_\"                                       \n [26] \"amo_method_\"                                      \n [27] \"amo_pay_growth_\"                                  \n [28] \"amo_period_new_\"                                  \n [29] \"amo_period_term_\"                                 \n [30] \"amo_term_growth_\"                                 \n [31] \"annfactor\"                                        \n [32] \"base_general_mort_table\"                          \n [33] \"base_general_mort_table_\"                         \n [34] \"base_regular_mort_table\"                          \n [35] \"base_safety_mort_table\"                           \n [36] \"base_safety_mort_table_\"                          \n [37] \"base_teacher_mort_table\"                          \n [38] \"base_teacher_mort_table_\"                         \n [39] \"baseR.rollmean\"                                   \n [40] \"ben_payment_ratio_\"                               \n [41] \"cal_factor_\"                                      \n [42] \"class_name_\"                                      \n [43] \"class_names\"                                      \n [44] \"class_names_no_drop_frs\"                          \n [45] \"class_names_no_frs\"                               \n [46] \"clean_mp_table\"                                   \n [47] \"clean_retire_rate_table\"                          \n [48] \"cola_current_retire_\"                             \n [49] \"cola_current_retire_one_\"                         \n [50] \"cola_tier_1_active_\"                              \n [51] \"cola_tier_1_active_constant_\"                     \n [52] \"cola_tier_2_active_\"                              \n [53] \"cola_tier_3_active_\"                              \n [54] \"contribution_refunds_\"                            \n [55] \"cumFV2\"                                           \n [56] \"current_amort_layers_table\"                       \n [57] \"current_amort_layers_table_\"                      \n [58] \"db_ee_cont_rate_\"                                 \n [59] \"db_ee_interest_rate_\"                             \n [60] \"dfreason\"                                         \n [61] \"disbursement_to_ip_\"                              \n [62] \"dr_current_\"                                      \n [63] \"dr_new_\"                                          \n [64] \"dr_old_\"                                          \n [65] \"drop_entry_table_col_names\"                       \n [66] \"drop_entry_tier_1_table\"                          \n [67] \"drop_entry_tier_1_table_\"                         \n [68] \"drop_entry_tier_2_table\"                          \n [69] \"drop_entry_tier_2_table_\"                         \n [70] \"early_retire_rate_tier_1_table\"                   \n [71] \"early_retire_rate_tier_2_table\"                   \n [72] \"early_retire_table_col_names\"                     \n [73] \"early_retirement_tier_1_table_\"                   \n [74] \"early_retirement_tier_2_table_\"                   \n [75] \"eco_ben_payment_current_\"                         \n [76] \"eco_early_retire_rate_tier_1_table\"               \n [77] \"eco_early_retire_rate_tier_2_table\"               \n [78] \"eco_entrant_profile_table\"                        \n [79] \"eco_er_dc_cont_rate_\"                             \n [80] \"eco_eso_judges_active_member_adjustment_ratio\"    \n [81] \"eco_eso_judges_total_active_member_\"              \n [82] \"eco_headcount_table_\"                             \n [83] \"eco_mort_retire_table\"                            \n [84] \"eco_mort_table\"                                   \n [85] \"eco_nc_cal_\"                                      \n [86] \"eco_normal_retire_rate_tier_1_table\"              \n [87] \"eco_normal_retire_rate_tier_2_table\"              \n [88] \"eco_outflow_\"                                     \n [89] \"eco_pvfb_term_current_\"                           \n [90] \"eco_retiree_pop_current_\"                         \n [91] \"eco_salary_headcount_table\"                       \n [92] \"eco_salary_table_\"                                \n [93] \"eco_separation_rate_table\"                        \n [94] \"eco_term_rate_female_table_\"                      \n [95] \"eco_term_rate_male_table_\"                        \n [96] \"eco_val_norm_cost_\"                               \n [97] \"eco_wf_data\"                                      \n [98] \"entry_year_range_\"                                \n [99] \"eso_ben_payment_current_\"                         \n[100] \"eso_early_retire_rate_tier_1_table\"               \n[101] \"eso_early_retire_rate_tier_2_table\"               \n[102] \"eso_entrant_profile_table\"                        \n[103] \"eso_er_dc_cont_rate_\"                             \n[104] \"eso_headcount_table_\"                             \n[105] \"eso_mort_retire_table\"                            \n[106] \"eso_mort_table\"                                   \n[107] \"eso_nc_cal_\"                                      \n[108] \"eso_normal_retire_rate_tier_1_table\"              \n[109] \"eso_normal_retire_rate_tier_2_table\"              \n[110] \"eso_outflow_\"                                     \n[111] \"eso_pvfb_term_current_\"                           \n[112] \"eso_retiree_pop_current_\"                         \n[113] \"eso_salary_headcount_table\"                       \n[114] \"eso_salary_table_\"                                \n[115] \"eso_separation_rate_table\"                        \n[116] \"eso_term_rate_female_table_\"                      \n[117] \"eso_term_rate_male_table_\"                        \n[118] \"eso_val_norm_cost_\"                               \n[119] \"eso_wf_data\"                                      \n[120] \"est_arith_return\"                                 \n[121] \"est_geo_return\"                                   \n[122] \"expected_icr\"                                     \n[123] \"female_mp_final_table\"                            \n[124] \"female_mp_table\"                                  \n[125] \"female_mp_table_\"                                 \n[126] \"FileName\"                                         \n[127] \"funding_lag_\"                                     \n[128] \"funding_list\"                                     \n[129] \"funding_policy_\"                                  \n[130] \"geo_return\"                                       \n[131] \"get_base_mort_table\"                              \n[132] \"get_benefit_data\"                                 \n[133] \"get_cum_fv\"                                       \n[134] \"get_early_retire_rate_table\"                      \n[135] \"get_funding_data\"                                 \n[136] \"get_funding_table\"                                \n[137] \"get_liability_data\"                               \n[138] \"get_mort_retire_table\"                            \n[139] \"get_mort_table\"                                   \n[140] \"get_mp_final_table\"                               \n[141] \"get_normal_retire_rate_table\"                     \n[142] \"get_pmt\"                                          \n[143] \"get_pmt0\"                                         \n[144] \"get_pvfb\"                                         \n[145] \"get_pvfs\"                                         \n[146] \"get_salary_headcount_table\"                       \n[147] \"get_sep_type\"                                     \n[148] \"get_separation_table\"                             \n[149] \"get_tier\"                                         \n[150] \"get_wf_data\"                                      \n[151] \"inflation_\"                                       \n[152] \"init_funding_data\"                                \n[153] \"judges_ben_payment_current_\"                      \n[154] \"judges_early_retire_rate_tier_1_table\"            \n[155] \"judges_early_retire_rate_tier_2_table\"            \n[156] \"judges_entrant_profile_table\"                     \n[157] \"judges_er_dc_cont_rate_\"                          \n[158] \"judges_headcount_table_\"                          \n[159] \"judges_mort_retire_table\"                         \n[160] \"judges_mort_table\"                                \n[161] \"judges_nc_cal_\"                                   \n[162] \"judges_normal_retire_rate_tier_1_table\"           \n[163] \"judges_normal_retire_rate_tier_2_table\"           \n[164] \"judges_outflow_\"                                  \n[165] \"judges_pvfb_term_current_\"                        \n[166] \"judges_retiree_pop_current_\"                      \n[167] \"judges_salary_headcount_table\"                    \n[168] \"judges_salary_table_\"                             \n[169] \"judges_separation_rate_table\"                     \n[170] \"judges_term_rate_female_table_\"                   \n[171] \"judges_term_rate_male_table_\"                     \n[172] \"judges_val_norm_cost_\"                            \n[173] \"judges_wf_data\"                                   \n[174] \"male_mp_final_table\"                              \n[175] \"male_mp_table\"                                    \n[176] \"male_mp_table_\"                                   \n[177] \"max_age_\"                                         \n[178] \"max_year_\"                                        \n[179] \"min_age_\"                                         \n[180] \"min_year_\"                                        \n[181] \"model_period_\"                                    \n[182] \"model_return_\"                                    \n[183] \"new_year_\"                                        \n[184] \"non_special_db_legacy_after_2018_ratio_\"          \n[185] \"non_special_db_legacy_before_2018_ratio_\"         \n[186] \"non_special_db_new_ratio_\"                        \n[187] \"normal_retire_rate_tier_1_table\"                  \n[188] \"normal_retire_rate_tier_2_table\"                  \n[189] \"normal_retire_table_col_names\"                    \n[190] \"normal_retirement_tier_1_table_\"                  \n[191] \"normal_retirement_tier_2_table_\"                  \n[192] \"NPER\"                                             \n[193] \"npv\"                                              \n[194] \"one_time_cola_\"                                   \n[195] \"payroll_growth_\"                                  \n[196] \"pension_payment_\"                                 \n[197] \"pop_growth_\"                                      \n[198] \"pv\"                                               \n[199] \"PVFB_CB\"                                          \n[200] \"recur_grow\"                                       \n[201] \"recur_grow2\"                                      \n[202] \"recur_grow3\"                                      \n[203] \"regular_ben_payment_current_\"                     \n[204] \"regular_early_retire_rate_tier_1_table\"           \n[205] \"regular_early_retire_rate_tier_2_table\"           \n[206] \"regular_entrant_profile_table\"                    \n[207] \"regular_er_dc_cont_rate_\"                         \n[208] \"regular_headcount_table_\"                         \n[209] \"regular_mort_retire_table\"                        \n[210] \"regular_mort_table\"                               \n[211] \"regular_nc_cal_\"                                  \n[212] \"regular_normal_retire_rate_tier_1_table\"          \n[213] \"regular_normal_retire_rate_tier_2_table\"          \n[214] \"regular_outflow_\"                                 \n[215] \"regular_pvfb_term_current_\"                       \n[216] \"regular_retiree_pop_current_\"                     \n[217] \"regular_salary_headcount_table\"                   \n[218] \"regular_salary_table_\"                            \n[219] \"regular_separation_rate_table\"                    \n[220] \"regular_term_rate_female_table_\"                  \n[221] \"regular_term_rate_male_table_\"                    \n[222] \"regular_total_active_member_\"                     \n[223] \"regular_val_norm_cost_\"                           \n[224] \"regular_wf_data\"                                  \n[225] \"retire_refund_ratio_\"                             \n[226] \"retiree_distribution\"                             \n[227] \"return_2023_\"                                     \n[228] \"return_scen_\"                                     \n[229] \"return_scenarios\"                                 \n[230] \"roll_npv\"                                         \n[231] \"roll_pv\"                                          \n[232] \"root_geo_return\"                                  \n[233] \"salary_growth_table\"                              \n[234] \"salary_growth_table_\"                             \n[235] \"senior_management_ben_payment_current_\"           \n[236] \"senior_management_early_retire_rate_tier_1_table\" \n[237] \"senior_management_early_retire_rate_tier_2_table\" \n[238] \"senior_management_entrant_profile_table\"          \n[239] \"senior_management_er_dc_cont_rate_\"               \n[240] \"senior_management_headcount_table_\"               \n[241] \"senior_management_mort_retire_table\"              \n[242] \"senior_management_mort_table\"                     \n[243] \"senior_management_nc_cal_\"                        \n[244] \"senior_management_normal_retire_rate_tier_1_table\"\n[245] \"senior_management_normal_retire_rate_tier_2_table\"\n[246] \"senior_management_outflow_\"                       \n[247] \"senior_management_pvfb_term_current_\"             \n[248] \"senior_management_retiree_pop_current_\"           \n[249] \"senior_management_salary_headcount_table\"         \n[250] \"senior_management_salary_table_\"                  \n[251] \"senior_management_separation_rate_table\"          \n[252] \"senior_management_term_rate_female_table_\"        \n[253] \"senior_management_term_rate_male_table_\"          \n[254] \"senior_management_total_active_member_\"           \n[255] \"senior_management_val_norm_cost_\"                 \n[256] \"senior_management_wf_data\"                        \n[257] \"smooth_return\"                                    \n[258] \"special_ben_payment_current_\"                     \n[259] \"special_db_legacy_after_2018_ratio_\"              \n[260] \"special_db_legacy_before_2018_ratio_\"             \n[261] \"special_db_new_ratio_\"                            \n[262] \"special_early_retire_rate_tier_1_table\"           \n[263] \"special_early_retire_rate_tier_2_table\"           \n[264] \"special_entrant_profile_table\"                    \n[265] \"special_er_dc_cont_rate_\"                         \n[266] \"special_headcount_table_\"                         \n[267] \"special_mort_retire_table\"                        \n[268] \"special_mort_table\"                               \n[269] \"special_nc_cal_\"                                  \n[270] \"special_normal_retire_rate_tier_1_table\"          \n[271] \"special_normal_retire_rate_tier_2_table\"          \n[272] \"special_outflow_\"                                 \n[273] \"special_pvfb_term_current_\"                       \n[274] \"special_retiree_pop_current_\"                     \n[275] \"special_risk_drop_entry_tier_1_table\"             \n[276] \"special_risk_drop_entry_tier_2_table\"             \n[277] \"special_salary_headcount_table\"                   \n[278] \"special_salary_table_\"                            \n[279] \"special_separation_rate_table\"                    \n[280] \"special_term_rate_female_table_\"                  \n[281] \"special_term_rate_male_table_\"                    \n[282] \"special_total_active_member_\"                     \n[283] \"special_val_norm_cost_\"                           \n[284] \"special_wf_data\"                                  \n[285] \"start_year_\"                                      \n[286] \"year_range_\"                                      \n[287] \"yos_range_\"                                       \n```\n\n\n:::\n\n```{.r .cell-code}\n# get(objnames[119], envir=rws) # how to get an object from the workspace\n```\n:::\n\n\n\n\n## Copy workforce data from Reason FRS environment to global environment as stacked data frames\n\nFor each of the 4 data frame types (active, term, refund, retire)\n\n-   create a stacked dataframe with all 7 classes\n-   put the df into the global environment\n\nReason, by contrast, stored the data as 7 data frames, one for each class.\n\nThe advantage of the 4 types as opposed to 7 classes is that they are generalizable to more pension systems. Most will need these demographics, whereas other systems won't have the same number or types of classes as Florida.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Here's how reason gets the data in their FRS model\n# regular_wf_data <- readRDS(\"regular_wf_data.rds\")\n# special_wf_data <- readRDS(\"special_wf_data.rds\")\n# admin_wf_data <- readRDS(\"admin_wf_data.rds\")\n# eco_wf_data <- readRDS(\"eco_wf_data.rds\")\n# eso_wf_data <- readRDS(\"eso_wf_data.rds\")\n# judges_wf_data <- readRDS(\"judges_wf_data.rds\")\n# senior_management_wf_data <- readRDS(\"senior_management_wf_data.rds\")\n\n# we'll get them all from the previously saved environment\n\n\n# prepare class names and dataframe names ---------------------------------\n\n# oddly, Reason used seniormanagement as a class name\n#  but used senior_management in dataframe names\n\nwfclasses <- frs_constants$classes |>\n  str_replace(\"seniormanagement\", \"senior_management\")\n\nwfnames <- paste0(wfclasses, \"_wf_data\")\nwfnames # names of wf objects to extract from Reason workspace\n\ncbind(wfclasses, wfnames) # make sure they look right\n\n\n# unpack the data -------\n# get_object(wfnames[1])\n\n# get one big list of lists of data frames\n# outer list has 7 lists, one for each class\n# each inner list has 4 data frames\n#   wf_active_df, term, refund, retire\n# they are similar but not the same in structure, but the same structure for each class\n\nwflist <- wfnames |>\n  purrr::map(\\(x) get_object(x))|>\n  purrr::set_names(wfclasses)\n\nnames(wflist)\n(wfdfnames <- names(wflist[[1]]))\n\n# get 4 data frames, with classes stacked\nnested <- wflist |>\n  as_tibble() |>\n  mutate(dfname=wfdfnames) |>\n  pivot_longer(cols = -dfname, names_to = \"class\") |>\n  pivot_wider(names_from = dfname)\n# note that wf_retire_df is a dt data.table, others are df data.frame\n\n# if needed we can convert with:\n# nested |>\n#   mutate(wf_retire_df = map(wf_retire_df, as.data.frame))\n\nunpack_dframes <- function(colname){\n  # for a single data frame name (colname), stack all 7 classes into a single data frame\n  # and put the stacked data frame into the environment\n  print(colname)\n  df <- nested |>\n    select(class, nestcol=all_of(colname)) |>\n    unnest_wider(col=nestcol) |>\n    unnest_longer(col=-class)\n  assign(colname, df, envir = .GlobalEnv)\n}\n\npurrr::walk(wfdfnames, unpack_dframes)  # unpack and stack all classes for each of the 4 data frames\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# take a look\ncount(wf_refund_df, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 2\n  class                  n\n  <chr>              <int>\n1 admin             223200\n2 eco               291648\n3 eso               339264\n4 judges            291648\n5 regular           440448\n6 senior_management 389360\n7 special           440448\n```\n\n\n:::\n\n```{.r .cell-code}\nfor(name in wfdfnames){\n  print(name)\n  glimpse(get(name))\n} \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"wf_active_df\"\nRows: 151,001\nColumns: 5\n$ class     <chr> \"regular\", \"regular\", \"regular\", \"regular\", \"regular\", \"regu…\n$ entry_age <dbl> 18, 18, 18, 20, 18, 20, 18, 20, 18, 20, 18, 20, 18, 20, 25, …\n$ age       <int> 18, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 25, …\n$ year      <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, …\n$ n_active  <dbl> 0.000, 0.000, 1086.047, 0.000, 0.000, 0.000, 0.000, 9997.682…\n[1] \"wf_term_df\"\nRows: 2,416,016\nColumns: 6\n$ class     <chr> \"regular\", \"regular\", \"regular\", \"regular\", \"regular\", \"regu…\n$ entry_age <dbl> 18, 18, 18, 20, 18, 20, 18, 20, 18, 20, 18, 20, 18, 20, 25, …\n$ age       <int> 18, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 25, …\n$ year      <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, …\n$ term_year <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, …\n$ n_term    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n[1] \"wf_refund_df\"\nRows: 2,416,016\nColumns: 6\n$ class     <chr> \"regular\", \"regular\", \"regular\", \"regular\", \"regular\", \"regu…\n$ entry_age <dbl> 18, 18, 18, 20, 18, 20, 18, 20, 18, 20, 18, 20, 18, 20, 25, …\n$ age       <int> 18, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 25, …\n$ year      <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, …\n$ term_year <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, …\n$ n_refund  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n[1] \"wf_retire_df\"\nRows: 144,525\nColumns: 7\n$ class       <chr> \"regular\", \"regular\", \"regular\", \"regular\", \"regular\", \"re…\n$ entry_age   <dbl> 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20…\n$ age         <int> 53, 58, 63, 68, 54, 59, 64, 69, 55, 60, 65, 70, 56, 61, 66…\n$ year        <int> 2023, 2023, 2023, 2023, 2024, 2024, 2024, 2024, 2025, 2025…\n$ term_year   <int> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023…\n$ retire_year <int> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023…\n$ n_retire    <dbl> 357.44484, 360.97018, 105.46287, 31.89003, 356.39796, 359.…\n```\n\n\n:::\n:::\n\n\n\n\nHere's an example of code (not run) that can be used to get a saved list of workforce data frames and put them individually into the global environment.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nwf_dataframes <- readRDS(fs::path(dfreason, \"wf_dataframes.rds\"))\nlength(wf_dataframes)\nnames(wf_dataframes) # wf_active_df,... term, refund, retire\nlist2env(wf_dataframes, envir = .GlobalEnv) # unlist them into the global environment\nrm(wf_dataframes) # remove the list\n```\n:::\n\n\n\n\n## Reproduce `baseline_funding <- get_funding_data()` with more generalizable code\n\n### Introduction\n\nIn the FRS project, `get_funding_data()` is in `Florida FRS funding model.R, which` is sourced before running get_funding_data().\n\nThe R file has live code in addition to functions. Here is the live code -- not run -- but we have the information it creates.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nclass_names <- init_funding_data$class\nfunding_list <- lapply(class_names, get_funding_table)\nnames(funding_list) <- class_names\n\ncurrent_amort_layers_table <- current_amort_layers_table_ %>% \n  mutate(amo_period = if_else(amo_period == \"n/a\", \"20\", amo_period),\n         amo_period = as.numeric(amo_period)) %>% \n  group_by(class, amo_period) %>%\n  summarise(amo_balance = sum(amo_balance)) %>% \n  #make sure that the amo periods are arranged in descending order\n  arrange(class, desc(amo_period)) %>% \n  ungroup()\n\n#More groups for class names:\nclass_names_no_drop_frs <- class_names[!class_names %in% c(\"drop\", \"frs\")]\nclass_names_no_frs <- class_names[!class_names %in% c(\"frs\")]\n```\n:::\n\n\n\n\nIn addition, the file has the two functions shown below, the second of which has 6 functions nested within it:\n\n![](images/clipboard-227634940.png)\n\n### Outputs from `get_funding_data()`\n\nbaseline_funding contains 9 data frames, one for each of the 7 classes, plus one for drop and one for frs as a whole. details below.\n\nThe 7 class dataframes contain 31 rows and 96 columns.\n\ndrop and frs contain 31 rows and 92 columns.\n\n-   rows are years\n-   columns are fairly standard pension model outputs such as:\n    -   payroll by db or dc, by legacy or new, plus total\n    -   aal, ava, mva, nc_rate generally by legacy or new\n    -   some other breakdowns\n    -   several derived values such as ratios\n\nThe 4 variables in regular but not in drop or frs are:\n\npayroll_db_legacy_ratio, payroll_db_new_ratio, payroll_dc_legacy_ratio, payroll_dc_new_ratio\n\nIt seems like we should be able to stack these 9 data frames into a single data frame with a class column and work with them as a group? TBD.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaseline_funding <- readRDS(fs::path(dfreason, \"baseline_funding.rds\"))\n\nprint(\"data frames in baseline_funding: \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data frames in baseline_funding: \"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(baseline_funding)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"regular\"           \"special\"           \"admin\"            \n[4] \"eso\"               \"eco\"               \"judges\"           \n[7] \"senior management\" \"drop\"              \"frs\"              \n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"\\n column names in baseline_funding regular: \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"\\n column names in baseline_funding regular: \"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(baseline_funding[[\"regular\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"year\"                          \"total_payroll\"                \n [3] \"payroll_db_legacy\"             \"payroll_db_new\"               \n [5] \"payroll_dc_legacy\"             \"payroll_dc_new\"               \n [7] \"pvfb_retire_current\"           \"liability_gain_loss_legacy\"   \n [9] \"liability_gain_loss_new\"       \"total_liability_gain_loss\"    \n[11] \"dr_legacy\"                     \"dr_new\"                       \n[13] \"total_aal\"                     \"aal_legacy\"                   \n[15] \"aal_new\"                       \"total_ava\"                    \n[17] \"ava_legacy\"                    \"ava_new\"                      \n[19] \"total_mva\"                     \"mva_legacy\"                   \n[21] \"mva_new\"                       \"roa\"                          \n[23] \"total_ual_ava\"                 \"ual_ava_legacy\"               \n[25] \"ual_ava_new\"                   \"total_ual_mva\"                \n[27] \"ual_mva_legacy\"                \"ual_mva_new\"                  \n[29] \"fr_ava\"                        \"fr_mva\"                       \n[31] \"total_nc_rate\"                 \"nc_rate_db_legacy\"            \n[33] \"nc_rate_db_new\"                \"nc_rate_legacy\"               \n[35] \"nc_rate_new\"                   \"ee_nc_rate_legacy\"            \n[37] \"ee_nc_rate_new\"                \"er_nc_rate_legacy\"            \n[39] \"er_nc_rate_new\"                \"er_stat_rate\"                 \n[41] \"amo_rate_legacy\"               \"amo_rate_new\"                 \n[43] \"admin_exp_rate\"                \"er_dc_rate_legacy\"            \n[45] \"er_dc_rate_new\"                \"nc_legacy\"                    \n[47] \"nc_new\"                        \"total_ee_nc_cont\"             \n[49] \"ee_nc_cont_legacy\"             \"ee_nc_cont_new\"               \n[51] \"total_er_nc_cont\"              \"er_nc_cont_legacy\"            \n[53] \"er_nc_cont_new\"                \"total_er_amo_cont\"            \n[55] \"er_amo_cont_legacy\"            \"er_amo_cont_new\"              \n[57] \"er_dc_cont_legacy\"             \"er_dc_cont_new\"               \n[59] \"total_er_cont\"                 \"total_er_db_cont\"             \n[61] \"total_er_dc_cont\"              \"total_ben_payment\"            \n[63] \"ben_payment_legacy\"            \"ben_payment_new\"              \n[65] \"total_refund\"                  \"refund_legacy\"                \n[67] \"refund_new\"                    \"disbursement_to_IP\"           \n[69] \"admin_exp_legacy\"              \"admin_exp_new\"                \n[71] \"total_solv_cont\"               \"solv_cont_legacy\"             \n[73] \"solv_cont_new\"                 \"total_er_cont_rate\"           \n[75] \"total_er_cont_real\"            \"cum_er_cont_real\"             \n[77] \"total_ual_mva_real\"            \"all_in_cost_real\"             \n[79] \"net_cf_legacy\"                 \"exp_inv_earnings_ava_legacy\"  \n[81] \"alloc_inv_earnings_ava_legacy\" \"exp_ava_legacy\"               \n[83] \"net_reallocation_legacy\"       \"ava_base_legacy\"              \n[85] \"unadj_ava_legacy\"              \"net_cf_new\"                   \n[87] \"exp_inv_earnings_ava_new\"      \"alloc_inv_earnings_ava_new\"   \n[89] \"exp_ava_new\"                   \"net_reallocation_new\"         \n[91] \"ava_base_new\"                  \"unadj_ava_new\"                \n[93] \"payroll_db_legacy_ratio\"       \"payroll_db_new_ratio\"         \n[95] \"payroll_dc_legacy_ratio\"       \"payroll_dc_new_ratio\"         \n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"\\nglimpse of baseline_funding$regular\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"\\nglimpse of baseline_funding$regular\"\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(baseline_funding$regular)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 31\nColumns: 96\n$ year                          <dbl> 2022, 2023, 2024, 2025, 2026, 2027, 2028…\n$ total_payroll                 <dbl> 29126383663, 30072991132, 31050363344, 3…\n$ payroll_db_legacy             <dbl> 18917045000, 20303453904, 20168543639, 1…\n$ payroll_db_new                <dbl> 0, 0, 0, 428218925, 778925272, 121730268…\n$ payroll_dc_legacy             <dbl> 10209338663, 9769537228, 10881819705, 10…\n$ payroll_dc_new                <dbl> 0, 0, 0, 1284656776, 2336775817, 3651908…\n$ pvfb_retire_current           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ liability_gain_loss_legacy    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ liability_gain_loss_new       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ total_liability_gain_loss     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ dr_legacy                     <dbl> 0.067, 0.000, 0.000, 0.000, 0.000, 0.000…\n$ dr_new                        <dbl> 0.067, 0.000, 0.000, 0.000, 0.000, 0.000…\n$ total_aal                     <dbl> 145585523000, 147921671633, 150221161154…\n$ aal_legacy                    <dbl> 145585523000, 147921671633, 150221161154…\n$ aal_new                       <dbl> 0, 0, 0, 32950899, 94920900, 194498302, …\n$ total_ava                     <dbl> 123245363000, 125709632419, 128299290970…\n$ ava_legacy                    <dbl> 123245363000, 125709632419, 128299290970…\n$ ava_new                       <dbl> 0, 0, 0, 32964758, 94956895, 194565121, …\n$ total_mva                     <dbl> 123965876000, 126286481055, 128749527907…\n$ mva_legacy                    <dbl> 123965876000, 126286481055, 128749527907…\n$ mva_new                       <dbl> 0, 0, 0, 32950899, 94919940, 194494754, …\n$ roa                           <dbl> -0.0718, 0.0670, 0.0670, 0.0670, 0.0670,…\n$ total_ual_ava                 <dbl> 22340160000, 22212039214, 21921870184, 2…\n$ ual_ava_legacy                <dbl> 22340160000, 22212039214, 21921870184, 2…\n$ ual_ava_new                   <dbl> 0.00, 0.00, 0.00, -13859.20, -35995.11, …\n$ total_ual_mva                 <dbl> 21619647000, 21635190578, 21471633246, 2…\n$ ual_mva_legacy                <dbl> 21619647000, 21635190578, 21471633246, 2…\n$ ual_mva_new                   <dbl> 0.0000, 0.0000, 0.0000, 0.0000, 959.0904…\n$ fr_ava                        <dbl> 0.8465496, 0.8498392, 0.8540694, 0.85845…\n$ fr_mva                        <dbl> 0.8514986, 0.8537389, 0.8570665, 0.86064…\n$ total_nc_rate                 <dbl> 0.08960000, 0.08960000, 0.08859359, 0.08…\n$ nc_rate_db_legacy             <dbl> NA, 0.08960000, 0.08859359, 0.08841491, …\n$ nc_rate_db_new                <dbl> NA, 0.00000000, 0.00000000, 0.08117562, …\n$ nc_rate_legacy                <dbl> 0.08960000, 0.08960000, 0.08859359, 0.08…\n$ nc_rate_new                   <dbl> 0.00000000, 0.00000000, 0.00000000, 0.08…\n$ ee_nc_rate_legacy             <dbl> 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03…\n$ ee_nc_rate_new                <dbl> 0.00, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03…\n$ er_nc_rate_legacy             <dbl> 0.05960000, 0.05960000, 0.05859359, 0.05…\n$ er_nc_rate_new                <dbl> 0.00000000, -0.03000000, -0.03000000, 0.…\n$ er_stat_rate                  <dbl> 0.1223, 0.0000, 0.0000, 0.0000, 0.0000, …\n$ amo_rate_legacy               <dbl> 0.06270000, 0.06832597, 0.07742988, 0.08…\n$ amo_rate_new                  <dbl> 0.000000e+00, 0.000000e+00, 0.000000e+00…\n$ admin_exp_rate                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ er_dc_rate_legacy             <dbl> 0.066, 0.066, 0.066, 0.066, 0.066, 0.066…\n$ er_dc_rate_new                <dbl> 0.000, 0.066, 0.066, 0.066, 0.066, 0.066…\n$ nc_legacy                     <dbl> 1694967232, 1819189376, 1786803756, 1762…\n$ nc_new                        <dbl> 0, 0, 0, 34760939, 63288578, 99071021, 1…\n$ total_ee_nc_cont              <dbl> 567511350, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ee_nc_cont_legacy             <dbl> 567511350, 609103617, 605056309, 5978795…\n$ ee_nc_cont_new                <dbl> 0, 0, 0, 12846568, 23367758, 36519080, 4…\n$ total_er_nc_cont              <dbl> 1127455882, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ er_nc_cont_legacy             <dbl> 1127455882, 1210085759, 1181747446, 1164…\n$ er_nc_cont_new                <dbl> 0, 0, 0, 21914371, 39920820, 62551941, 8…\n$ total_er_amo_cont             <dbl> 1285098768, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ er_amo_cont_legacy            <dbl> 1285098768, 1387253178, 1561647991, 1601…\n$ er_amo_cont_new               <dbl> 0.0000, 0.0000, 0.0000, 0.0000, -928.490…\n$ er_dc_cont_legacy             <dbl> 673816352, 644789457, 718200101, 6875422…\n$ er_dc_cont_new                <dbl> 0, 0, 0, 84787347, 154227204, 241025931,…\n$ total_er_cont                 <dbl> 3086371002, 3242128394, 3461595538, 3559…\n$ total_er_db_cont              <dbl> 2412554650, 2597338937, 2743395438, 2787…\n$ total_er_dc_cont              <dbl> 673816352, 644789457, 718200101, 7723296…\n$ total_ben_payment             <dbl> 8373165621, 8990697601, 9141605583, 9291…\n$ ben_payment_legacy            <dbl> 8373165621, 8990697601, 9141605583, 9291…\n$ ben_payment_new               <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, …\n$ total_refund                  <dbl> 19868333, 9896207, 13620152, 16118442, 1…\n$ refund_legacy                 <dbl> 19868333, 9896207, 13620152, 13257090, 1…\n$ refund_new                    <dbl> 0, 0, 0, 2861352, 5433028, 8827469, 1224…\n$ disbursement_to_IP            <dbl> 538425529, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ admin_exp_legacy              <dbl> 15768185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ admin_exp_new                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ total_solv_cont               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ solv_cont_legacy              <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ solv_cont_new                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ total_er_cont_rate            <dbl> 0.10596479, 0.10780864, 0.11148325, 0.11…\n$ total_er_cont_real            <dbl> 3086371002, 3166141010, 3301234759, 3315…\n$ cum_er_cont_real              <dbl> 0, 3166141010, 6467375769, 9782644966, 1…\n$ total_ual_mva_real            <dbl> 21619647000, 21128115799, 20476945158, 1…\n$ all_in_cost_real              <dbl> 0, 24294256809, 26944320927, 29578956600…\n$ net_cf_legacy                 <dbl> -5967161667, -5794151254, -5806773988, -…\n$ exp_inv_earnings_ava_legacy   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ alloc_inv_earnings_ava_legacy <dbl> 8163242000, 8217074502, 8358849778, 8508…\n$ exp_ava_legacy                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ net_reallocation_legacy       <dbl> 670660000, 41346171, 37582761, 38275319,…\n$ ava_base_legacy               <dbl> 0, 120348287373, 122806245425, 125328490…\n$ unadj_ava_legacy              <dbl> 0, 125668286248, 128261708209, 130866076…\n$ net_cf_new                    <dbl> 0, 0, 0, 31899587, 57854621, 90241109, 1…\n$ exp_inv_earnings_ava_new      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ alloc_inv_earnings_ava_new    <dbl> 0, 0, 0, 1065171, 4137517, 9367217, 1700…\n$ exp_ava_new                   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ net_reallocation_new          <dbl> 0.000000e+00, 0.000000e+00, 0.000000e+00…\n$ ava_base_new                  <dbl> 0, 0, 0, 15949793, 61892069, 140077449, …\n$ unadj_ava_new                 <dbl> 0, 0, 0, 32964758, 94956896, 194565220, …\n$ payroll_db_legacy_ratio       <dbl> NA, 0.6751392, 0.6495429, 0.6216353, 0.5…\n$ payroll_db_new_ratio          <dbl> NA, 0.00000000, 0.00000000, 0.01335701, …\n$ payroll_dc_legacy_ratio       <dbl> NA, 0.32486084, 0.35045708, 0.32493666, …\n$ payroll_dc_new_ratio          <dbl> NA, 0.00000000, 0.00000000, 0.04007102, …\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"\\ndimensions and variables for the 9 data frames:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"\\ndimensions and variables for the 9 data frames:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfor(name in names(baseline_funding)){\n  cat(\"\\n\")\n  cat(name, \"\\n\")\n  cat(\"rows, cols: \", dim(baseline_funding[[name]]), \"\\n\")\n  diffs <- setdiff(names(baseline_funding[[\"regular\"]]),\n                   names(baseline_funding[[name]]))\n  cat(\"variables in regular but not in\", name, \":\\n  \")\n  cat(diffs, sep=\", \")\n  cat(\"\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nregular \nrows, cols:  31 96 \nvariables in regular but not in regular :\n  \n\nspecial \nrows, cols:  31 96 \nvariables in regular but not in special :\n  \n\nadmin \nrows, cols:  31 96 \nvariables in regular but not in admin :\n  \n\neso \nrows, cols:  31 96 \nvariables in regular but not in eso :\n  \n\neco \nrows, cols:  31 96 \nvariables in regular but not in eco :\n  \n\njudges \nrows, cols:  31 96 \nvariables in regular but not in judges :\n  \n\nsenior management \nrows, cols:  31 96 \nvariables in regular but not in senior management :\n  \n\ndrop \nrows, cols:  31 92 \nvariables in regular but not in drop :\n  payroll_db_legacy_ratio, payroll_db_new_ratio, payroll_dc_legacy_ratio, payroll_dc_new_ratio\n\nfrs \nrows, cols:  31 92 \nvariables in regular but not in frs :\n  payroll_db_legacy_ratio, payroll_db_new_ratio, payroll_dc_legacy_ratio, payroll_dc_new_ratio\n```\n\n\n:::\n:::\n\n\n\n\n### Inputs to get_funding_data()\n\n#### arguments\n\n-    dr_current = dr_current_,\n-    dr_new = dr_new_,\n-    cola_tier_1_active_constant = cola_tier_1_active_constant_, yes\n-    cola_tier_1_active = cola_tier_1_active_,\n-    cola_tier_2_active = cola_tier_2_active_,\n-    cola_tier_3_active = cola_tier_3_active_,\n-    cola_current_retire = cola_current_retire_,\n-    cola_current_retire_one = cola_current_retire_one_,\n-    one_time_cola = one_time_cola_,\n-    retire_refund_ratio = retire_refund_ratio_,\n-    cal_factor = cal_factor_,\n    \n#### inputs below are for the liability model\n-    non_special_db_new_ratio = non_special_db_new_ratio_,\n-    special_db_new_ratio = special_db_new_ratio_,\n\n#### inputs below are for the funding model\n-    return_scen = return_scen_,\n-    model_return = model_return_,\n-    amo_period_new = amo_period_new_,\n-    amo_pay_growth = amo_pay_growth_,\n-    amo_method = amo_method_\n\n### data needed in the workspace ----\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narglist <- read_csv(\n\"argname\ndr_current_\ndr_new_\ncola_tier_1_active_constant_\ncola_tier_1_active_\ncola_tier_2_active_\ncola_tier_3_active_\n\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 6 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): argname\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# arglist <- c(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", )\n```\n:::\n\n\n\n\n\n### Reproducing results (`Florida FRS funding model.R`)\n\n-   mcapply the function `get_liability_data` to `class_names_no_drop_frs` (the 7 classes), using the arguments below\n-   dr_current = dr_current,\n-   dr_new = dr_new,\n-   cola_tier_1_active_constant = cola_tier_1_active_constant,\n-   cola_tier_1_active = cola_tier_1_active,\n-   cola_tier_2_active = cola_tier_2_active,\n-   cola_tier_3_active = cola_tier_3_active,\n-   cola_current_retire = cola_current_retire,\n-   cola_current_retire_one = cola_current_retire_one,\n-   one_time_cola = one_time_cola,\n-   retire_refund_ratio = retire_refund_ratio,\n-   cal_factor = cal_factor,\n-   #inputs below are for the liability model\n-   non_special_db_new_ratio = non_special_db_new_ratio,\n-   special_db_new_ratio = special_db_new_ratio\n\nFirst task is Model calibration:\n\n-   loop through the 7 classes:\n    -   start with funding list that has 9 data frames, with dimension 31 x 92\n    -   and liability list\n    -   they **appear** to be template dataframes designed to hold results    \n    -   get fund_data and liab_data for the class\n    -   calibrate payroll ratios -- e.g., \n        `fund_data$payroll_db_legacy_ratio <- lag(liab_data$payroll_db_legacy_est / liab_data$total_payroll_est) #use lag to align with the funding mechanism`\n        \n        these ratios appear to be new variables not in the template dataframes\n    \n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nThe following steps reproduce the results.\n\n## Reproduce `baseline_liability <- get_liability_data()` with more generalizable code\n\n### Introduction\n\n### Outputs from `get_liability_data()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaseline_liability <- readRDS(fs::path(dfreason, \"baseline_liability.rds\"))\n```\n:::\n\n\n\n\n### Inputs to get_liability_data()\n\n### Reproducing results\n",
    "supporting": [
      "steps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}